#!/bin/sh
#
# MIT License
#
# Copyright (c) 2018 8devices
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

set -e
TMP_BUILD_DIR="$(mktemp -d)"

update_repositories () {
    if which apt-get; then
        sudo apt-get update -qq
    elif which rpm; then
        echo "RPM is not supported yet!"
        return 1
    elif which opkg; then
        echo "OPKG is not supported yet!"
        return 1
    elif which brew; then
        echo "BREW is not supported yet!"
        return 1
    else
        echo "Unknown package manager! (not supported yet)"
        return 1
    fi

    return 0
}

install_build_tools () {
    if which apt-get; then
        sudo apt-get install -yqq git cmake build-essential automake libtool
    elif which rpm; then
        echo "RPM is not supported yet!"
        return 1
    elif which opkg; then
        echo "OPKG is not supported yet!"
        return 1
    elif which brew; then
        echo "BREW is not supported yet!"
        return 1
    else
        echo "Unknown package manager! (not supported yet)"
        return 1
    fi

    return $?
}

install_dependencies () {
    if which apt-get; then
        sudo apt-get install -yqq libmicrohttpd-dev libjansson-dev libcurl4-gnutls-dev libssl-dev
    elif which rpm; then
        echo "RPM is not supported yet!"
        return 1
    elif which opkg; then
        echo "OPKG is not supported yet!"
        return 1
    elif which brew; then
        echo "BREW is not supported yet!"
        return 1
    else
        echo "Unknown package manager! (not supported yet)"
        return 1
    fi

    return $?
}

install_libjwt () {
    git clone --quiet -b v1.9.0 --single-branch https://github.com/benmcollins/libjwt
    if ! [ $? -eq 0 ]; then
        echo "Failed to obtain libjwt!"
        return 1
    fi

    cd libjwt

    autoreconf -i
    ./configure
    make
    sudo make install

    status_code=$?

    cd ..
    rm -rf libjwt

    return ${status_code}
}

install_ulfius_orcania_yder () {
    git clone --quiet -b v2.3.2 --single-branch https://github.com/babelouest/ulfius.git
    if ! [ $? -eq 0 ]; then
        echo "Failed to obtain ulfius library!"
        return 1
    fi

    cd ulfius
    git submodule update --init
    if ! [ $? -eq 0 ]; then
        echo "Failed to update ulfius submodules!"
        cd ..
        rm -rf ulfius
        return 1
    fi
    
    cd lib/orcania
    make
    sudo make install
    if ! [ $? -eq 0 ]; then
        echo "Failed to install orcania library!"
        cd ../../..
        rm -rf ulfius
        return 1
    fi
    
    cd ../yder
    make
    sudo make install
    if ! [ $? -eq 0 ]; then
        echo "Failed to install yder library!"
        cd ../../..
        rm -rf ulfius
        return 1
    fi
    
    cd ../..
    make
    sudo make install
    if ! [ $? -eq 0 ]; then
        echo "Failed to install ulfius library!"
        cd ..
        rm -rf ulfius
        return 1
    fi

    cd ..
    rm -rf ulfius
}

echo "==> Updating package lists..."
update_repositories

echo "==> Installing building tools..."
install_build_tools

echo "==> Installing dependencies..."
install_dependencies

cd "${TMP_BUILD_DIR}"

echo "==> Installing libjwt..."
install_libjwt

echo "==> Installing ulfius..."
install_ulfius_orcania_yder

rm -r "${TMP_BUILD_DIR}"
