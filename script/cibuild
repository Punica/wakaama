#!/bin/sh
#
# MIT License
#
# Copyright (c) 2018 8devices
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

set -e

cd "$(dirname "$0")/.."

script/setup -DCODE_COVERAGE=ON

script/test

###############################################################################
# FOLLOWING SECTION WAITS UNTIL COVERAGE REPORT DIRECTORIES APPEAR IN PROJECT
# DIRECTORY, BY DEFAULT TIMEOUT IS SET TO 10 s, INTERVAL IS 100 ms
# IF NO COVERAGE REPORTS APPEAR IN DIRECTORY, 
###############################################################################
sleep_interval=0.1
sleep_timeout=10 # Timeout in seconds
for time_slept in $(seq 0.0 ${sleep_interval} ${sleep_timeout})
do
    if [ -d "regular" ] && [ -d "secure" ]; then
        echo "Time until coverage directories appeared: ${time_slept} s"
        # If another way of making sure that coverage reports appears is found,
        # following code can be moved out of this for-if section
        cp -r build core examples secure
        cp -r build core examples regular
        exit 0
    fi
    sleep ${sleep_interval}
done

exit 1
